// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SQLDB.Context;

namespace SQLDB.Migrations
{
    [DbContext(typeof(CustomerDbContext))]
    [Migration("20201203084939_products")]
    partial class products
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CorporateIdNumber")
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CustomerPhoneNumber")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CustomerSource")
                        .HasColumnType("varchar(150)");

                    b.Property<int>("EconomicCustomerId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceNinjaCustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("PostalCode")
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("VatNumber")
                        .HasColumnType("int");

                    b.Property<string>("VatZoneName")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Website")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("address")
                        .HasColumnType("varchar(150)");

                    b.Property<float>("balance")
                        .HasColumnType("real");

                    b.Property<string>("city")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("country")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("currency")
                        .HasColumnType("varchar(150)");

                    b.Property<int>("customerSourceId")
                        .HasColumnType("int");

                    b.Property<float>("dueAmount")
                        .HasColumnType("real");

                    b.Property<string>("email")
                        .HasColumnType("varchar(150)");

                    b.Property<int>("paymentTermsDaysOfCredit")
                        .HasColumnType("int");

                    b.Property<string>("paymentTermsName")
                        .HasColumnType("varchar(150)");

                    b.Property<int>("paymentTermsNumber")
                        .HasColumnType("int");

                    b.Property<string>("paymentTermsType")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("state")
                        .HasColumnType("varchar(150)");

                    b.Property<int>("vatZoneNumber")
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Domain.Models.CustomerContact", b =>
                {
                    b.Property<int>("customerContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("customerContactNumber")
                        .HasColumnType("int");

                    b.Property<int>("customerNumber")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasColumnType("varchar(150)");

                    b.Property<bool>("isPrimary")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("phone")
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("customerContactId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerContacts");
                });

            modelBuilder.Entity("Domain.Models.Product", b =>
                {
                    b.Property<int>("productId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("dbUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("econProductId")
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime>("lastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .HasColumnType("varchar(150)");

                    b.Property<int>("ninjaProductId")
                        .HasColumnType("int");

                    b.Property<float>("recommendedPrice")
                        .HasColumnType("real");

                    b.Property<float>("salesPrice")
                        .HasColumnType("real");

                    b.Property<string>("source")
                        .HasColumnType("varchar(150)");

                    b.Property<int>("sourceId")
                        .HasColumnType("int");

                    b.HasKey("productId");

                    b.ToTable("products");
                });

            modelBuilder.Entity("Domain.Models.ShippingAddress", b =>
                {
                    b.Property<int>("deliveryLocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("city")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("country")
                        .HasColumnType("varchar(150)");

                    b.Property<int>("customerNumber")
                        .HasColumnType("int");

                    b.Property<int>("deliveryLocationNumber")
                        .HasColumnType("int");

                    b.Property<string>("postalCode")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("self")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("state")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("termsOfDelivery")
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("deliveryLocationId");

                    b.HasIndex("CustomerId");

                    b.ToTable("ShippingAddresses");
                });

            modelBuilder.Entity("Domain.Models.CustomerContact", b =>
                {
                    b.HasOne("Domain.Models.Customer", "customer")
                        .WithMany("customerContacts")
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("Domain.Models.ShippingAddress", b =>
                {
                    b.HasOne("Domain.Models.Customer", "customer")
                        .WithMany("ShippingAddress")
                        .HasForeignKey("CustomerId");
                });
#pragma warning restore 612, 618
        }
    }
}
